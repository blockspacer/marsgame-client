// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @enum {number}
 */
export namespace WalBuffers{
export enum ObjectType{
  player= 0,
  missile= 1,
  rock= 2,
  enemy_mech= 3,
  xelon= 4
}};

/**
 * @constructor
 */
export namespace WalBuffers{
export class Log {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Log
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Log {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Log= obj
 * @returns Log
 */
static getRoot(bb:flatbuffers.ByteBuffer, obj?:Log):Log {
  return (obj || new Log).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param number index
 * @returns flatbuffers.Long
 */
timeIds(index: number):flatbuffers.Long|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : this.bb!.createLong(0, 0);
};

/**
 * @returns number
 */
timeIdsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param WalBuffers.ObjectLog= obj
 * @returns WalBuffers.ObjectLog
 */
objects(index: number, obj?:WalBuffers.ObjectLog):WalBuffers.ObjectLog|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new WalBuffers.ObjectLog).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
objectsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static start(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset timeIdsOffset
 */
static addTimeIds(builder:flatbuffers.Builder, timeIdsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, timeIdsOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Long> data
 * @returns flatbuffers.Offset
 */
static createTimeIdsVector(builder:flatbuffers.Builder, data:flatbuffers.Long[]):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt64(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startTimeIdsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset objectsOffset
 */
static addObjects(builder:flatbuffers.Builder, objectsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, objectsOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createObjectsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startObjectsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static end(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset offset
 */
static finishBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
};

static create(builder:flatbuffers.Builder, timeIdsOffset:flatbuffers.Offset, objectsOffset:flatbuffers.Offset):flatbuffers.Offset {
  Log.start(builder);
  Log.addTimeIds(builder, timeIdsOffset);
  Log.addObjects(builder, objectsOffset);
  return Log.end(builder);
}
}
}
/**
 * @constructor
 */
export namespace WalBuffers{
export class ObjectLog {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns ObjectLog
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ObjectLog {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param ObjectLog= obj
 * @returns ObjectLog
 */
static getRoot(bb:flatbuffers.ByteBuffer, obj?:ObjectLog):ObjectLog {
  return (obj || new ObjectLog).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
id():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns WalBuffers.ObjectType
 */
type():WalBuffers.ObjectType {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : WalBuffers.ObjectType.player;
};

/**
 * @param number index
 * @param WalBuffers.TimeLog= obj
 * @returns WalBuffers.TimeLog
 */
times(index: number, obj?:WalBuffers.TimeLog):WalBuffers.TimeLog|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new WalBuffers.TimeLog).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
timesLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static start(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param number id
 */
static addId(builder:flatbuffers.Builder, id:number) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param WalBuffers.ObjectType type
 */
static addType(builder:flatbuffers.Builder, type:WalBuffers.ObjectType) {
  builder.addFieldInt8(1, type, WalBuffers.ObjectType.player);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset timesOffset
 */
static addTimes(builder:flatbuffers.Builder, timesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, timesOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createTimesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startTimesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static end(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static create(builder:flatbuffers.Builder, id:number, type:WalBuffers.ObjectType, timesOffset:flatbuffers.Offset):flatbuffers.Offset {
  ObjectLog.start(builder);
  ObjectLog.addId(builder, id);
  ObjectLog.addType(builder, type);
  ObjectLog.addTimes(builder, timesOffset);
  return ObjectLog.end(builder);
}
}
}
/**
 * @constructor
 */
export namespace WalBuffers{
export class TimeLog {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns TimeLog
 */
__init(i:number, bb:flatbuffers.ByteBuffer):TimeLog {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param TimeLog= obj
 * @returns TimeLog
 */
static getRoot(bb:flatbuffers.ByteBuffer, obj?:TimeLog):TimeLog {
  return (obj || new TimeLog).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns flatbuffers.Long
 */
timeId():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @returns number
 */
x():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 99999999;
};

/**
 * @returns number
 */
y():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 99999999;
};

/**
 * @returns number
 */
angle():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 99999999.0;
};

/**
 * @param flatbuffers.Builder builder
 */
static start(builder:flatbuffers.Builder) {
  builder.startObject(4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Long timeId
 */
static addTimeId(builder:flatbuffers.Builder, timeId:flatbuffers.Long) {
  builder.addFieldInt64(0, timeId, builder.createLong(0, 0));
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 */
static addX(builder:flatbuffers.Builder, x:number) {
  builder.addFieldInt32(1, x, 99999999);
};

/**
 * @param flatbuffers.Builder builder
 * @param number y
 */
static addY(builder:flatbuffers.Builder, y:number) {
  builder.addFieldInt32(2, y, 99999999);
};

/**
 * @param flatbuffers.Builder builder
 * @param number angle
 */
static addAngle(builder:flatbuffers.Builder, angle:number) {
  builder.addFieldFloat32(3, angle, 99999999.0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static end(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static create(builder:flatbuffers.Builder, timeId:flatbuffers.Long, x:number, y:number, angle:number):flatbuffers.Offset {
  TimeLog.start(builder);
  TimeLog.addTimeId(builder, timeId);
  TimeLog.addX(builder, x);
  TimeLog.addY(builder, y);
  TimeLog.addAngle(builder, angle);
  return TimeLog.end(builder);
}
}
}
